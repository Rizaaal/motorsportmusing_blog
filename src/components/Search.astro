---
const posts = await Astro.glob("../articles/*.md");
import formatDate from "../utils/scripts/date.js";
import dateUtils from "../utils/scripts/date";

const url = post => {
  const year = new Date(post.frontmatter.pubDate).getFullYear();
  const month = dateUtils.monthNames[new Date(post.frontmatter.pubDate).getMonth()];

  return `${import.meta.env.BASE_URL}/posts/${year}/${month}/${post.frontmatter.title}`;
}
---
<style>
  section#search {
    position: fixed;
    top: 0;
    left: 100vw;
    display: flex;
    flex-direction: column;
    gap: 1em;
    height: 100svh;
    width: 100%;
    background-color: rgba(0, 0, 0, 0.85);
    color: white;
    padding: 2em;
    overflow-y: scroll;
    transition: left .3s;
  }

  button#close-search {
    align-self: end;
    background: transparent url("../../public/icons/close.png") no-repeat;
    color: transparent;
    overflow: hidden;
    border: none;
    min-height: 29px;
    width: 29px;
  }

  input {
    min-height: 40px;
  }

  a {
    color: white;
  }

  ul, h2 {
    padding: 0;
    margin: 0;
  }

  hr {
    width: 40%;
    margin: 2em auto;
  }
</style>


<section id="search">
  <button id="close-search">Close</button>
  <input type="text" placeholder="Search by article name or tag" />
  <h2></h2>
  <ul id="result-list">
    {
      posts.map((post) => (
        <li style="display: none;">
          <h2>
            <a href={url(post)}>{post.frontmatter.title}</a>
          </h2>
          <p>
            {formatDate.USADate(new Date(post.frontmatter.pubDate))}
            <span class="tags">
              {post.frontmatter.tags.map((tag) => ` #${tag}`)}
            </span>
          </p>
          <p>{post.frontmatter.description}</p>
          <hr />
        </li>
      ))
    }
  </ul>
</section>

<script>
  //@ts-nocheck
  const resultList = document.querySelector("#result-list");
  const searchButton = document.querySelector("button#search");
  const closeButton = document.querySelector("button#close-search");
  const searchSection = document.querySelector("section#search");
  const sectionTitle = document.querySelector("section#search > h2");
  const searchBar = document.querySelector("section#search > input");
  const posts = document.querySelectorAll("#result-list > li");
  import { searchButtonLabel } from "../utils/constants";

  const noResultsMessage = document.createElement("p");
  noResultsMessage.innerText = "No results found";

  function filterPosts() {
    noResultsMessage.remove();

    if (/\S/.test(searchBar.value)) {
      resultList.style.display = "revert";
      let isEmpty = true;

      posts.forEach((post) => {
        const title = post.children[0].innerText.toLowerCase();
        const tags = post.children[1].children[0].innerText.replaceAll("#", "");

        if (title.includes(searchBar.value) || tags.includes(searchBar.value)) {
          post.style.display = "revert";
          isEmpty = false;
        } else {
          post.style.display = "none";
        }
      });

      isEmpty && sectionTitle.after(noResultsMessage);
    } else {
      resultList.style.display = "none";
    }
  }

  searchBar.addEventListener("keyup", filterPosts);
  searchButton.addEventListener("click", () => {
    searchSection.style.left = "0px";
  });
  closeButton.addEventListener("click", () => {
    searchSection.style.left = "100vw"
  });
</script>
